# airflow-1.10.15-pvc-k8s.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: airflow-elyra
---
# ServiceAccount and RBAC Resources
apiVersion: v1
kind: ServiceAccount
metadata:
  name: airflow
  namespace: airflow-elyra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: airflow-role
  namespace: airflow-elyra
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow-rolebinding
  namespace: airflow-elyra
subjects:
- kind: ServiceAccount
  name: airflow
  namespace: airflow-elyra
roleRef:
  kind: Role
  name: airflow-role
  apiGroup: rbac.authorization.k8s.io
---
# ConfigMap for Airflow configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
  namespace: airflow-elyra
data:
  airflow.cfg: |
    [core]
    executor = LocalExecutor
    sql_alchemy_conn = postgresql+psycopg2://postgres:postgres@postgresql.airflow-elyra.svc.cluster.local:5432/airflow
    load_examples = False
    dags_folder = /opt/airflow/dags
    fernet_key = 9UGshNRJ_zq-E2RLpcJRPNFW5zEL5Xv9aCMjQQRKoxI=
    
    [webserver]
    web_server_host = 0.0.0.0
    web_server_port = 8080
    authenticate = False
    expose_config = True
    
    [scheduler]
    job_heartbeat_sec = 5
    scheduler_heartbeat_sec = 5
---
# Git-sync ConfigMap with improved script
apiVersion: v1
kind: ConfigMap
metadata:
  name: git-sync-config
  namespace: airflow-elyra
data:
  git-sync.sh: |
    #!/bin/sh
    # Initial clone
    git clone --single-branch --branch main https://github.com/rajiv2711/elyra-poc.git /tmp/repo
    mkdir -p /opt/airflow/dags
    
    # Initial sync - only if directory exists
    if [ -d "/tmp/repo/tests/dags" ]; then
      cp -r /tmp/repo/tests/dags/* /opt/airflow/dags/
      echo "Initial DAGs synchronized successfully"
    else
      echo "Warning: /tmp/repo/tests/dags directory not found during initial sync"
    fi
    
    # Continuous sync every 60 seconds
    while true; do
      echo "Syncing repository..."
      cd /tmp/repo && git pull
      
      # Clean destination directory first (preserve __pycache__)
      find /opt/airflow/dags -type f -name "*.py" -delete
      
      # Copy only if the directory exists
      if [ -d "/tmp/repo/tests/dags" ]; then
        cp -r /tmp/repo/tests/dags/* /opt/airflow/dags/
        echo "DAGs synchronized successfully"
      else
        echo "Warning: /tmp/repo/tests/dags directory not found"
      fi
      
      sleep 60
    done
---
# PVC for DAGs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-dags-pvc
  namespace: airflow-elyra
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# PostgreSQL deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: airflow-elyra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:11
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: airflow
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres-data
      volumes:
      - name: postgresql-data
        emptyDir: {}
---
# PostgreSQL service
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: airflow-elyra
spec:
  selector:
    app: postgresql
  ports:
  - port: 5432
    targetPort: 5432
---
# Airflow initialization job
apiVersion: batch/v1
kind: Job
metadata:
  name: airflow-init
  namespace: airflow-elyra
spec:
  template:
    spec:
      serviceAccountName: airflow  # Add service account
      restartPolicy: Never
      containers:
      - name: airflow-init
        image: apache/airflow:1.10.15
        command:
        - "/bin/bash"
        - "-c"
        - |
          airflow version
          sleep 10  # Wait for PostgreSQL to be ready
          export AIRFLOW__CORE__SQL_ALCHEMY_CONN="postgresql+psycopg2://postgres:postgres@postgresql.airflow-elyra.svc.cluster.local:5432/airflow"
          airflow initdb
          echo "Airflow database initialized"
---
# Airflow Webserver deployment with git-sync container (from airflow-with-gitsync.yaml)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: airflow-elyra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      serviceAccountName: airflow  # Add service account
      containers:
      - name: airflow-webserver
        image: apache/airflow:1.10.15
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: airflow-config
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: dags
          mountPath: /opt/airflow/dags
        command:
        - "/bin/bash"
        - "-c"
        - |
          echo "Starting Airflow Webserver..."
          airflow webserver
      # Git-sync container from airflow-with-gitsync.yaml
      - name: git-sync
        image: alpine/git:latest
        command: ["/bin/sh", "-c"]
        args: ["sh /configmap/git-sync.sh"]
        volumeMounts:
        - name: dags
          mountPath: /opt/airflow/dags
        - name: git-sync-config
          mountPath: /configmap
      volumes:
      - name: airflow-config
        configMap:
          name: airflow-config
      - name: dags
        persistentVolumeClaim:
          claimName: airflow-dags-pvc
      - name: git-sync-config
        configMap:
          name: git-sync-config
          defaultMode: 0755
---
# Airflow Scheduler deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow-elyra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      serviceAccountName: airflow  # Add service account
      containers:
      - name: airflow-scheduler
        image: apache/airflow:1.10.15
        volumeMounts:
        - name: airflow-config
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: dags
          mountPath: /opt/airflow/dags
        command:
        - "/bin/bash"
        - "-c"
        - |
          echo "Starting Airflow Scheduler..."
          airflow scheduler
      volumes:
      - name: airflow-config
        configMap:
          name: airflow-config
      - name: dags
        persistentVolumeClaim:
          claimName: airflow-dags-pvc
---
# Airflow Webserver Service
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow-elyra
spec:
  type: NodePort
  selector:
    app: airflow-webserver
  ports:
  - port: 8080
    targetPort: 8080